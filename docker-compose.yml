version: "3.7"

services:
  # APPS
  gateway:
    container_name: gateway
    build:
      context: ./apps/gateway
      target: development
    ports:
      - ${GATEWAY_PORT-3000}:${GATEWAY_PORT-3000}
    volumes:
      - ./apps/gateway:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - postgres
      - demand
      - order
      - payment
      - restaurant
      - shipping
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: ${AUTH_USER_DATABASE_URL}
      APP_PORT: ${GATEWAY_PORT-3000}
      DEMAND_SERVICE_HOST: demand
      DEMAND_SERVICE_PORT: ${DEMAND_PORT-4001}
      ORDER_SERVICE_HOST: order
      ORDER_SERVICE_PORT: ${ORDER_PORT-4002}
      PAYMENT_SERVICE_HOST: payment
      PAYMENT_SERVICE_PORT: ${PAYMENT_PORT-4003}
      RESTAURANT_SERVICE_HOST: restaurant
      RESTAURANT_SERVICE_PORT: ${RESTAURANT_PORT-4004}
      SHIPPING_SERVICE_HOST: shipping
      SHIPPING_SERVICE_PORT: ${SHIPPING_PORT-4005}

  pwa:
    container_name: pwa
    build:
      context: ./apps/pwa
      target: development
    ports:
      - ${PWA_PORT-3001}:3000
    volumes:
      - ./apps/pwa:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - gateway

  admin-dashboard:
    container_name: admin-dashboard
    build:
      context: ./apps/admin-dashboard
      target: development
    ports:
      - ${ADMIN_DASHBOARD_PORT-3002}:3000
      - "24678:24678"
    volumes:
      - ./apps/admin-dashboard:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - gateway
    environment:
      NUXT_PUBLIC_GATEWAY_URL: http://localhost:${GATEWAY_PORT-3000}

  # SERVICES
  demand:
    container_name: demand
    build:
      context: ./services/demand-service
      target: development
    ports:
      - ${DEMAND_PORT-4001}:${DEMAND_PORT-4001}
    volumes:
      - ./services/demand-service:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - postgres
    environment:
      APP_PORT: ${DEMAND_PORT-4001}
      APP_HOST: demand
      DATABASE_URL: ${DEMAND_DATABASE_URL}

  order:
    container_name: order
    build:
      context: ./services/order-service
      target: development
    ports:
      - ${ORDER_PORT-4002}:${ORDER_PORT-4002}
    volumes:
      - ./services/order-service:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - postgres
    environment:
      APP_PORT: ${ORDER_PORT-4002}
      APP_HOST: order

  payment:
    container_name: payment
    build:
      context: ./services/payment-service
      target: development
    ports:
      - ${PAYMENT_PORT-4003}:${PAYMENT_PORT-4003}
    volumes:
      - ./services/payment-service:/home/node/app
      - /home/node/app/node_modules
    environment:
      APP_PORT: ${PAYMENT_PORT-4003}
      APP_HOST: payment

  restaurant:
    container_name: restaurant
    build:
      context: ./services/restaurant-service
      target: development
    ports:
      - ${RESTAURANT_PORT-4004}:${RESTAURANT_PORT-4004}
    volumes:
      - ./services/restaurant-service:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - postgres
    environment:
      APP_PORT: ${RESTAURANT_PORT-4004}
      APP_HOST: restaurant

  shipping:
    container_name: shipping
    build:
      context: ./services/shipping-service
      target: development
    ports:
      - ${SHIPPING_PORT-4005}:${SHIPPING_PORT-4005}
    volumes:
      - ./services/shipping-service:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - postgres
    environment:
      APP_PORT: ${SHIPPING_PORT-4005}
      APP_HOST: shipping

  # DATABASES
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./infra/docker/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER-username}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-password}
      - POSTGRES_MULTIPLE_DATABASES="auth-user","demand","order","restaurant","shipping"

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"

volumes:
  postgres-db: